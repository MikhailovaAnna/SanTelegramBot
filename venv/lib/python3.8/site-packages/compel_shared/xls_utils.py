from funcy import silent
from operator import itemgetter
from xlsxio import XlsxioReader


def from_xlsio_generator(xls_file):
    with XlsxioReader(xls_file) as reader:
        with reader.get_sheet(reader.get_sheet_names()[0]) as sheet:
            header = sheet.read_header()
            yield header
            key_to_column = {key: i for i, key in enumerate(header)}

            for row in sheet.iter_rows():
                yield {
                    key: silent(itemgetter(key_to_column[key]))(row)
                    for key in key_to_column
                }


def is_xlsx_count_greater_than(xls_file, threshold: int) -> bool:
    cnt = 0
    with XlsxioReader(xls_file) as reader:
        with reader.get_sheet(reader.get_sheet_names()[0]) as ws:
            for _ in ws.iter_rows():
                cnt += 1
                if cnt == threshold:
                    return True
    return False


def get_xlsx_count(xls_file) -> int:
    with XlsxioReader(xls_file) as reader:
        with reader.get_sheet(reader.get_sheet_names()[0]) as ws:
            cnt = sum(1 for _ in ws.iter_rows())
            return cnt - 1 if cnt > 0 else 0
