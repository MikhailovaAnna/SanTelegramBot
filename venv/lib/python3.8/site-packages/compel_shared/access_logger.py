from aiohttp.abc import AbstractAccessLogger
from aiohttp.web_request import BaseRequest
from aiohttp.web_response import StreamResponse

from compel_shared.config import LIVENESS_TEST, METRICS_PATH


class StructAccessLogger(AbstractAccessLogger):

    def log(self,
            request: BaseRequest,
            response: StreamResponse,
            time: float) -> None:
        if request.path not in [LIVENESS_TEST, METRICS_PATH]:
            request_id = getattr(request, 'request_id', None)
            method = self.logger.info if response.status < 400 else (
                self.logger.warning if response.status < 500 else self.logger.error)
            method(f'{request.method} {request.path_qs}',
                   method=request.method,
                   remote=request.remote,
                   # headers=dict(**request.headers),
                   response=dict(length=response.body_length, status=response.status),
                   duration=time,
                   request_id=request_id,
                   query=[(k, request.query[k]) for k in request.query])
