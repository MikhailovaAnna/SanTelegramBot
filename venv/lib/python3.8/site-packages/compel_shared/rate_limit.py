import functools
from asyncio import BoundedSemaphore


def rate_limit(rate: int):
    ctx = {}

    def wrapper(func):
        @functools.wraps(func)
        async def wrapped(*args):
            semaphore = ctx.get('semaphore')
            if not semaphore:
                semaphore = BoundedSemaphore(rate)
                ctx['semaphore'] = semaphore
            async with semaphore:
                return await func(*args)

        return wrapped

    return wrapper
