from marshmallow.utils import EXCLUDE

from compel_shared.logger import get_logger

log = get_logger(__name__)


class ConfigElement:
    def __str__(self):
        s = str(self.as_dict())
        if len(s) > 100:
            s = s[:100] + '...'
        return s

    def as_dict(self):
        return self.Schema().dump(self)


class i18nNamed:

    def get_name(self, locale):
        if locale in self.name:
            return self.name[locale]
        if self.name:
            return list(self.name.values())[0]
        if self.code:
            return self.code


def load_schema(schema, data, **context):
    try:
        return schema(context=context).load(data, unknown=EXCLUDE)
    except Exception as e:
        log.exception(f'Failed to load schema', schema=schema, data=data)
        raise e
